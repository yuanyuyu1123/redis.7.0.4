# Example sentinel.conf

# By default protected mode is disabled in sentinel mode. Sentinel is reachable
# from interfaces different than localhost. Make sure the sentinel instance is
# protected from the outside world via firewalling or other means.
# 默认情况下，保护模式在哨兵模式下被禁用。
# Sentinel 可以从不同于 localhost 的接口访问。
# 确保通过防火墙或其他方式保护哨兵实例不受外界影响。
protected-mode no

# port <sentinel-port>
# The port that this sentinel instance will run on
# 此哨兵实例将运行的端口
port 26379

# By default Redis Sentinel does not run as a daemon. Use 'yes' if you need it.
# Note that Redis will write a pid file in /var/run/redis-sentinel.pid when
# daemonized.
# 默认情况下，Redis Sentinel 不作为守护进程运行。如果需要，请使用“是”。
# 请注意，Redis 在守护进程时会在 varrunredis-sentinel.pid 中写入一个 pid 文件。
daemonize no

# When running daemonized, Redis Sentinel writes a pid file in
# /var/run/redis-sentinel.pid by default. You can specify a custom pid file
# location here.
# 在运行 daemonized 时，Redis Sentinel 默认会在 varrunredis-sentinel.pid 中写入一个 pid 文件。
# 您可以在此处指定自定义 pid 文件位置。
pidfile /var/run/redis-sentinel.pid

# Specify the log file name. Also the empty string can be used to force
# Sentinel to log on the standard output. Note that if you use standard
# output for logging but daemonize, logs will be sent to /dev/null
# 指定日志文件名。此外，空字符串可用于强制 Sentinel 登录标准输出。
# 请注意，如果您使用标准输出进行日志记录但守护进程，则日志将被发送到 devnull
logfile ""

# sentinel announce-ip <ip>
# sentinel announce-port <port>
#
# The above two configuration directives are useful in environments where,
# because of NAT, Sentinel is reachable from outside via a non-local address.
# 上述两个配置指令在由于 NAT 而可以通过非本地地址从外部访问 Sentinel 的环境中很有用。
#
# When announce-ip is provided, the Sentinel will claim the specified IP address
# in HELLO messages used to gossip its presence, instead of auto-detecting the
# local address as it usually does.
# 当提供announce-ip 时，Sentinel 将在 HELLO 消息中声明指定的 IP 地址，用于八卦其存在，而不是像通常那样自动检测本地地址。
#
# Similarly when announce-port is provided and is valid and non-zero, Sentinel
# will announce the specified TCP port.
# 类似地，当提供了announce-port并且有效且非零时，Sentinel将宣布指定的TCP端口。
#
# The two options don't need to be used together, if only announce-ip is
# provided, the Sentinel will announce the specified IP and the server port
# as specified by the "port" option. If only announce-port is provided, the
# Sentinel will announce the auto-detected local IP and the specified port.
# 这两个选项不需要一起使用，如果只提供announce-ip，Sentinel 会公布指定的IP 和“port”选项指定的服务器端口。
# 如果只提供了announce-port，Sentinel 将宣布自动检测到的本地IP 和指定的端口。
#
# Example:
#
# sentinel announce-ip 1.2.3.4

# dir <working-directory>
# Every long running process should have a well-defined working directory.
# For Redis Sentinel to chdir to /tmp at startup is the simplest thing
# for the process to don't interfere with administrative tasks such as
# unmounting filesystems.
# 每个长时间运行的进程都应该有一个定义明确的工作目录。
# 对于 Redis Sentinel，在启动时从 chdir 到 tmp 是进程不干扰诸如卸载文件系统之类的管理任务的最简单的事情。
dir /tmp

# sentinel monitor <master-name> <ip> <redis-port> <quorum>
#
# Tells Sentinel to monitor this master, and to consider it in O_DOWN
# (Objectively Down) state only if at least <quorum> sentinels agree.
# 告诉 Sentinel 监视这个 master，并且只有在至少 <quorum> 个 sentinels 同意的情况下才考虑它处于 O_DOWN（客观地关闭）状态。
#
# Note that whatever is the ODOWN quorum, a Sentinel will require to
# be elected by the majority of the known Sentinels in order to
# start a failover, so no failover can be performed in minority.
# 请注意，无论 ODOWN quorum 是多少，Sentinel 都需要由大多数已知 Sentinel 选出才能启动故障转移，因此不能执行少数故障转移。
#
# Replicas are auto-discovered, so you don't need to specify replicas in
# any way. Sentinel itself will rewrite this configuration file adding
# the replicas using additional configuration options.
# Also note that the configuration file is rewritten when a
# replica is promoted to master.
# 副本是自动发现的，因此您无需以任何方式指定副本。 Sentinel 本身将重写此配置文件，使用其他配置选项添加副本。
# 另请注意，将副本提升为主副本时会重写配置文件。
#
# Note: master name should not include special characters or spaces.
# The valid charset is A-z 0-9 and the three characters ".-_".
# 注意：主名称不应包含特殊字符或空格。有效的字符集是 A-z 0-9 和三个字符“.-_”。
sentinel monitor mymaster 127.0.0.1 6379 2

# sentinel auth-pass <master-name> <password>
#
# Set the password to use to authenticate with the master and replicas.
# Useful if there is a password set in the Redis instances to monitor.
# 设置用于对主副本和副本进行身份验证的密码。如果在要监控的 Redis 实例中设置了密码，则很有用。
#
# Note that the master password is also used for replicas, so it is not
# possible to set a different password in masters and replicas instances
# if you want to be able to monitor these instances with Sentinel.
# 请注意，主密码也用于副本，因此如果您希望能够使用 Sentinel 监控这些实例，则无法在主实例和副本实例中设置不同的密码。
#
# However you can have Redis instances without the authentication enabled
# mixed with Redis instances requiring the authentication (as long as the
# password set is the same for all the instances requiring the password) as
# the AUTH command will have no effect in Redis instances with authentication
# switched off.
# 但是，您可以将未启用身份验证的 Redis 实例与需要身份验证的 Redis 实例混合使用（只要所有需要密码的实例的密码设置相同），
# 因为 AUTH 命令在身份验证关闭的 Redis 实例中无效.
#
# Example:
#
# sentinel auth-pass mymaster MySUPER--secret-0123passw0rd

# sentinel auth-user <master-name> <username>
#
# This is useful in order to authenticate to instances having ACL capabilities,
# that is, running Redis 6.0 or greater. When just auth-pass is provided the
# Sentinel instance will authenticate to Redis using the old "AUTH <pass>"
# method. When also an username is provided, it will use "AUTH <user> <pass>".
# In the Redis servers side, the ACL to provide just minimal access to
# Sentinel instances, should be configured along the following lines:
# 这对于向具有 ACL 功能（即运行 Redis 6.0 或更高版本）的实例进行身份验证很有用。
# 当只提供 auth-pass 时，Sentinel 实例将使用旧的“AUTH <pass>”方法对 Redis 进行身份验证。
# 当还提供用户名时，它将使用“AUTH <user> <pass>”。在 Redis 服务器端，
# 仅提供对 Sentinel 实例的最小访问权限的 ACL 应该按照以下几行进行配置：
#
#     user sentinel-user >somepassword +client +subscribe +publish \
#                        +ping +info +multi +slaveof +config +client +exec on

# sentinel down-after-milliseconds <master-name> <milliseconds>
#
# Number of milliseconds the master (or any attached replica or sentinel) should
# be unreachable (as in, not acceptable reply to PING, continuously, for the
# specified period) in order to consider it in S_DOWN state (Subjectively
# Down).
# 主服务器（或任何附加的副本或哨兵）不可达的毫秒数（例如，在指定的时间段内，对 PING 的连续回复不可接受）
# 以便将其视为 S_DOWN 状态（主观上关闭）。
#
# Default is 30 seconds.
sentinel down-after-milliseconds mymaster 30000

# IMPORTANT NOTE: starting with Redis 6.2 ACL capability is supported for
# Sentinel mode, please refer to the Redis website https://redis.io/topics/acl
# for more details.
# 重要提示：从 Redis 6.2 开始，Sentinel 模式支持 ACL 功能，
# 有关详细信息，请参阅 Redis 网站 https:redis.iotopicsacl。

# Sentinel's ACL users are defined in the following format:
# Sentinel 的 ACL 用户定义如下：
#
#   user <username> ... acl rules ...
#
# For example:
#
#   user worker +@admin +@connection ~* on >ffa9203c493aa99
#
# For more information about ACL configuration please refer to the Redis
# website at https://redis.io/topics/acl and redis server configuration 
# template redis.conf.
# 有关 ACL 配置的更多信息，请参阅 Redis 网站 https:redis.iotopicsacl 和 redis 服务器配置模板 redis.conf。

# ACL LOG
#
# The ACL Log tracks failed commands and authentication events associated
# with ACLs. The ACL Log is useful to troubleshoot failed commands blocked 
# by ACLs. The ACL Log is stored in memory. You can reclaim memory with 
# ACL LOG RESET. Define the maximum entry length of the ACL Log below.
# ACL 日志跟踪与 ACL 关联的失败命令和身份验证事件。 ACL 日志可用于对 ACL 阻止的失败命令进行故障排除。
#  ACL 日志存储在内存中。您可以使用 ACL LOG RESET 回收内存。在下面定义 ACL 日志的最大条目长度。
acllog-max-len 128

# Using an external ACL file 使用外部 ACL 文件
#
# Instead of configuring users here in this file, it is possible to use
# a stand-alone file just listing users. The two methods cannot be mixed:
# if you configure users here and at the same time you activate the external
# ACL file, the server will refuse to start.
# 可以使用仅列出用户的独立文件，而不是在此文件中配置用户。
# 两种方式不能混用：如果在这里配置用户，同时激活外部ACL文件，服务器会拒绝启动。
#
# The format of the external ACL user file is exactly the same as the
# format that is used inside redis.conf to describe users.
# 外部 ACL 用户文件的格式与 redis.conf 中用于描述用户的格式完全相同。
#
# aclfile /etc/redis/sentinel-users.acl

# requirepass <password>
#
# You can configure Sentinel itself to require a password, however when doing
# so Sentinel will try to authenticate with the same password to all the
# other Sentinels. So you need to configure all your Sentinels in a given
# group with the same "requirepass" password. Check the following documentation
# for more info: https://redis.io/topics/sentinel
# 您可以将 Sentinel 本身配置为需要密码，但是这样做时，Sentinel 将尝试使用相同的密码对所有其他 Sentinel 进行身份验证。
# 因此，您需要使用相同的“requirepass”密码配置给定组中的所有 Sentinel。
# 查看以下文档以获取更多信息：https:redis.iotopicssentinel
#
# IMPORTANT NOTE: starting with Redis 6.2 "requirepass" is a compatibility
# layer on top of the ACL system. The option effect will be just setting
# the password for the default user. Clients will still authenticate using
# AUTH <password> as usually, or more explicitly with AUTH default <password>
# if they follow the new protocol: both will work.
# 重要提示：从 Redis 6.2 开始，“requirepass”是 ACL 系统之上的兼容层。
# 选项效果将只是为默认用户设置密码。客户端仍然会像往常一样使用 AUTH <password> 进行身份验证，
# 或者更明确地使用 AUTH default <password> 如果他们遵循新协议：两者都可以工作。
#
# New config files are advised to use separate authentication control for
# incoming connections (via ACL), and for outgoing connections (via
# sentinel-user and sentinel-pass)
# 建议新的配置文件对传入连接（通过 ACL）和传出连接（通过 sentinel-user 和 sentinel-pass）使用单独的身份验证控制
#
# The requirepass is not compatible with aclfile option and the ACL LOAD
# command, these will cause requirepass to be ignored.
# requirepass 与 aclfile 选项和 ACL LOAD 命令不兼容，这些将导致 requirepass 被忽略。

# sentinel sentinel-user <username>
#
# You can configure Sentinel to authenticate with other Sentinels with specific
# user name.
# 您可以将 Sentinel 配置为使用特定用户名与其他 Sentinel 进行身份验证。

# sentinel sentinel-pass <password>
#
# The password for Sentinel to authenticate with other Sentinels. If sentinel-user
# is not configured, Sentinel will use 'default' user with sentinel-pass to authenticate.
# Sentinel 与其他 Sentinel 进行身份验证的密码。如果未配置 sentinel-user，
# 则 Sentinel 将使用带有 sentinel-pass 的“默认”用户进行身份验证。

# sentinel parallel-syncs <master-name> <numreplicas>
#
# How many replicas we can reconfigure to point to the new replica simultaneously
# during the failover. Use a low number if you use the replicas to serve query
# to avoid that all the replicas will be unreachable at about the same
# time while performing the synchronization with the master.
# 在故障转移期间，我们可以重新配置多少个副本以同时指向新副本。
# 如果您使用副本来提供查询，请使用较小的数字，以避免在与主服务器执行同步时几乎同时无法访问所有副本。
sentinel parallel-syncs mymaster 1

# sentinel failover-timeout <master-name> <milliseconds>
#
# Specifies the failover timeout in milliseconds. It is used in many ways:
# 以毫秒为单位指定故障转移超时。它以多种方式使用：
#
# - The time needed to re-start a failover after a previous failover was
#   already tried against the same master by a given Sentinel, is two
#   times the failover timeout.
#   在给定的 Sentinel 已经针对同一个主服务器尝试过之前的故障转移后，重新启动故障转移所需的时间是故障转移超时的两倍。
#
# - The time needed for a replica replicating to a wrong master according
#   to a Sentinel current configuration, to be forced to replicate
#   with the right master, is exactly the failover timeout (counting since
#   the moment a Sentinel detected the misconfiguration).
#   根据 Sentinel 当前配置，将副本复制到错误的 master 所需的时间，强制与正确的 master 复制，
#   正是故障转移超时（从 Sentinel 检测到错误配置的那一刻开始计算）。
#
# - The time needed to cancel a failover that is already in progress but
#   did not produced any configuration change (SLAVEOF NO ONE yet not
#   acknowledged by the promoted replica).
#   取消已在进行中但未产生任何配置更改的故障转移所需的时间（SLAVEOF NO ONE 尚未被提升的副本确认）。
#
# - The maximum time a failover in progress waits for all the replicas to be
#   reconfigured as replicas of the new master. However even after this time
#   the replicas will be reconfigured by the Sentinels anyway, but not with
#   the exact parallel-syncs progression as specified.
#   正在进行的故障转移等待所有副本重新配置为新主节点的副本的最长时间。
#   然而，即使在这段时间之后，Sentinel 仍然会重新配置副本，但不会按照指定的确切并行同步进程进行。
#
# Default is 3 minutes.
sentinel failover-timeout mymaster 180000

# SCRIPTS EXECUTION 脚本执行
#
# sentinel notification-script and sentinel reconfig-script are used in order
# to configure scripts that are called to notify the system administrator
# or to reconfigure clients after a failover. The scripts are executed
# with the following rules for error handling:
# sentinel notification-script 和 sentinel reconfig-script 用于配置用于通知系统管理员或在故障转移后重新配置客户端的脚本。
# 使用以下错误处理规则执行脚本：
#
# If script exits with "1" the execution is retried later (up to a maximum
# number of times currently set to 10).
# 如果脚本以“1”退出，则稍后重试执行（最多当前设置为 10 次）。
#
# If script exits with "2" (or an higher value) the script execution is
# not retried.
# 如果脚本以“2”（或更高的值）退出，则不会重试脚本执行。
#
# If script terminates because it receives a signal the behavior is the same
# as exit code 1.
# 如果脚本因收到信号而终止，则行为与退出代码 1 相同。
#
# A script has a maximum running time of 60 seconds. After this limit is
# reached the script is terminated with a SIGKILL and the execution retried.
# 脚本的最长运行时间为 60 秒。达到此限制后，脚本以 SIGKILL 终止并重试执行。

# NOTIFICATION SCRIPT 通知脚本
#
# sentinel notification-script <master-name> <script-path>
# 
# Call the specified notification script for any sentinel event that is
# generated in the WARNING level (for instance -sdown, -odown, and so forth).
# This script should notify the system administrator via email, SMS, or any
# other messaging system, that there is something wrong with the monitored
# Redis systems.
# 为在 WARNING 级别生成的任何哨兵事件调用指定的通知脚本（例如 -sdown、-odown 等）。
# 此脚本应通过电子邮件、SMS 或任何其他消息传递系统通知系统管理员受监控的 Redis 系统出现问题。
#
# The script is called with just two arguments: the first is the event type
# and the second the event description.
# 该脚本仅使用两个参数调用：第一个是事件类型，第二个是事件描述。
#
# The script must exist and be executable in order for sentinel to start if
# this option is provided.
# 如果提供了此选项，该脚本必须存在且可执行，以便哨兵启动。
#
# Example:
#
# sentinel notification-script mymaster /var/redis/notify.sh

# CLIENTS RECONFIGURATION SCRIPT
#
# sentinel client-reconfig-script <master-name> <script-path>
#
# When the master changed because of a failover a script can be called in
# order to perform application-specific tasks to notify the clients that the
# configuration has changed and the master is at a different address.
# 当主服务器因故障转移而更改时，可以调用脚本以执行特定于应用程序的任务，以通知客户端配置已更改并且主服务器位于不同的地址。
# 
# The following arguments are passed to the script:
# 以下参数被传递给脚本：
#
# <master-name> <role> <state> <from-ip> <from-port> <to-ip> <to-port>
#
# <state> is currently always "start"
# <role> is either "leader" or "observer"
# 
# The arguments from-ip, from-port, to-ip, to-port are used to communicate
# the old address of the master and the new address of the elected replica
# (now a master).
#
# This script should be resistant to multiple invocations.
# 该脚本应该能够抵抗多次调用。
#
# Example:
#
# sentinel client-reconfig-script mymaster /var/redis/reconfig.sh

# SECURITY 安全
#
# By default SENTINEL SET will not be able to change the notification-script
# and client-reconfig-script at runtime. This avoids a trivial security issue
# where clients can set the script to anything and trigger a failover in order
# to get the program executed.
# 默认情况下，SENTINEL SET 将无法在运行时更改通知脚本和客户端重新配置脚本。
# 这避免了客户端可以将脚本设置为任何内容并触发故障转移以执行程序的微不足道的安全问题。

sentinel deny-scripts-reconfig yes

# REDIS COMMANDS RENAMING (DEPRECATED) Redis 命令重命名（已弃用）
#
# WARNING: avoid using this option if possible, instead use ACLs.
# 警告：尽可能避免使用此选项，而是使用 ACL。
#
# Sometimes the Redis server has certain commands, that are needed for Sentinel
# to work correctly, renamed to unguessable strings. This is often the case
# of CONFIG and SLAVEOF in the context of providers that provide Redis as
# a service, and don't want the customers to reconfigure the instances outside
# of the administration console.
# 有时 Redis 服务器具有某些命令，这些命令是 Sentinel 正常工作所必需的，它们被重命名为不可猜测的字符串。
# 在提供 Redis 作为服务的提供商的上下文中，CONFIG 和 SLAVEOF 经常出现这种情况，并且不希望客户在管理控制台之外重新配置实例。
#
# In such case it is possible to tell Sentinel to use different command names
# instead of the normal ones. For example if the master "mymaster", and the
# associated replicas, have "CONFIG" all renamed to "GUESSME", I could use:
# 在这种情况下，可以告诉 Sentinel 使用不同的命令名称而不是正常名称。
# 例如，如果主“mymaster”和关联的副本将“CONFIG”全部重命名为“GUESSME”，我可以使用：
#
# SENTINEL rename-command mymaster CONFIG GUESSME
#
# After such configuration is set, every time Sentinel would use CONFIG it will
# use GUESSME instead. Note that there is no actual need to respect the command
# case, so writing "config guessme" is the same in the example above.
# 在设置了这样的配置之后，每次 Sentinel 使用 CONFIG 时，它都会使用 GUESSME。
# 请注意，实际上不需要遵守命令大小写，因此在上面的示例中编写“configguessme”是相同的。
#
# SENTINEL SET can also be used in order to perform this configuration at runtime.
# SENTINEL SET 也可用于在运行时执行此配置。
#
# In order to set a command back to its original name (undo the renaming), it
# is possible to just rename a command to itself:
# 为了将命令设置回其原始名称（撤消重命名），可以将命令重命名为自身：
#
# SENTINEL rename-command mymaster CONFIG CONFIG

# HOSTNAMES SUPPORT
#
# Normally Sentinel uses only IP addresses and requires SENTINEL MONITOR
# to specify an IP address. Also, it requires the Redis replica-announce-ip
# keyword to specify only IP addresses.
# 通常 Sentinel 只使用 IP 地址，并且需要 SENTINEL MONITOR 指定 IP 地址。
# 此外，它需要 Redis replica-announce-ip 关键字来仅指定 IP 地址。
#
# You may enable hostnames support by enabling resolve-hostnames. Note
# that you must make sure your DNS is configured properly and that DNS
# resolution does not introduce very long delays.
# 您可以通过启用解析主机名来启用主机名支持。
# 请注意，您必须确保您的 DNS 配置正确，并且 DNS 解析不会引入很长的延迟。
#
SENTINEL resolve-hostnames no

# When resolve-hostnames is enabled, Sentinel still uses IP addresses
# when exposing instances to users, configuration files, etc. If you want
# to retain the hostnames when announced, enable announce-hostnames below.
# 启用 resolve-hostnames 后，Sentinel 在向用户、配置文件等公开实例时仍然使用 IP 地址。
# 如果您想在宣布时保留主机名，请在下面启用announce-hostnames。
#
SENTINEL announce-hostnames no

# When master_reboot_down_after_period is set to 0, Sentinel does not fail over
# when receiving a -LOADING response from a master. This was the only supported
# behavior before version 7.0.
# 当 master_reboot_down_after_period 设置为 0 时，Sentinel 在接收到来自 master 的 -LOADING 响应时不会进行故障转移。
# 这是 7.0 版之前唯一受支持的行为。
#
# Otherwise, Sentinel will use this value as the time (in ms) it is willing to
# accept a -LOADING response after a master has been rebooted, before failing
# over.
# 否则，Sentinel 将使用此值作为在主服务器重新启动后，在故障转移之前愿意接受 -LOADING 响应的时间（以毫秒为单位）。

SENTINEL master-reboot-down-after-period mymaster 0
